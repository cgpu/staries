name: docker
on:
  pull_request:
    types: [opened, edited, reopened, synchronize, closed]
    paths:
    - '.docker/*'
jobs:
  build-push-pr-tag:
#     if: contains(github.event.head_commit.message, '[build .docker]') == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_REGISTRY_USERNAME }}
          password: ${{ secrets.QUAY_REGISTRY_PASSWORD }}
      - name: Build and push with pr tag for testing
        id: pr-build
        uses: docker/build-push-action@v2
        with:
          context: .docker/
          platforms: linux/amd64
          push: true
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/notebook:pr
      - name: Set up Docker Buildx with driver - docker
        if: steps.pr-build.outcome == 'success'
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker # defaults to "docker-containerized"
      - name: Build and push image with prod tags
        if: steps.pr-build.outcome == 'success'
        id: prod-build
        uses: docker/build-push-action@v2
        with:
          # using "load: true" forces the docker driver
          # not necessary here, because we set it before
          #load: true
          context: .docker/
          platforms: linux/amd64
      # list all images, you will see my-ecr-repo/service and my-project/base
      - name: Look up images
        if: steps.pr-build.outcome == 'success'
        run: |
          docker pull docker.io/${{ secrets.DOCKERHUB_USERNAME }}/notebook:pr --quiet
          docker images --digests | grep notebook
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/notebook:pr docker.io/${{ secrets.DOCKERHUB_USERNAME }}/notebook:latest
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/notebook:pr quay.io/${{ secrets.QUAY_REGISTRY_NAMESPACE }}/notebook:latest
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/notebook:pr docker.io/${{ secrets.DOCKERHUB_USERNAME }}/notebook:sha-${{ github.sha }}
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/notebook:pr quay.io/${{ secrets.QUAY_REGISTRY_NAMESPACE }}/notebook:sha-${{ github.sha }}
          docker images --digests | grep notebook
          git clone https://github.com/$GITHUB_REPOSITORY
          cd ${{ github.event.repository.name }}/.docker/
          echo "git log -1: $(git log -1)"
          git checkout ${{ github.head_ref }}
          echo "git branch: $(git branch)"
          echo "git log -1: $(git log -1)"
          docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/notebook:latest .
          docker build -t quay.io/${{ secrets.QUAY_REGISTRY_NAMESPACE }}/notebook:latest .
          docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/notebook:sha-${{ github.sha }} .
          docker build -t quay.io/${{ secrets.QUAY_REGISTRY_NAMESPACE }}/notebook:sha-${{ github.sha }} .
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/notebook:latest
          docker push quay.io/${{ secrets.QUAY_REGISTRY_NAMESPACE }}/notebook:latest
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/notebook:sha-${{ github.sha }}
          docker push quay.io/${{ secrets.QUAY_REGISTRY_NAMESPACE }}/notebook:sha-${{ github.sha }}

